name: .NET-Release

on:
  create:
    tags:
      - v*
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Release
      run: dotnet publish -r linux-x64 -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true

    - uses: "marvinpinto/action-automatic-releases@latest"
      name: "release"
      with:
        title: "Release ${{ github.event.release.tag_name }}"
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        files: |
          **/*.exe

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=mschwehl/daxtracker
        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION=nightly
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
        fi
        echo ::set-output name=tags::${TAGS}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Copy the Dockerfile
      run: |
        ls -d "$PWD/"*  ; cp ./docker/* /home/runner/work/stocktracker/stocktracker/DaxTracker/bin/Release/netcoreapp3.1/linux-x64/publish/ ; ls -lars /home/runner/work/stocktracker/stocktracker/DaxTracker/bin/Release/netcoreapp3.1/linux-x64/publish/

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: /home/runner/work/stocktracker/stocktracker/DaxTracker/bin/Release/netcoreapp3.1/linux-x64/publish/
        file: /home/runner/work/stocktracker/stocktracker/DaxTracker/bin/Release/netcoreapp3.1/linux-x64/publish/Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.prep.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
